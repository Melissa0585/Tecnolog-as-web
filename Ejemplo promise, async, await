****** Ejemplo 1: Esperar el Transporte Público

export async function esperarTransporte(): Promise<void> { //Declaracion función asincrónica que devuelve una promesa 
  //la función devuelve una promesa al resolverse no proporciona un valor
  await new Promise(resolve => setTimeout(resolve, 3000)); // Simula el tiempo de espera de 3 segundos
  //pausa función esperarTransporte
  const tomarTransporte = true; //declara constante y asigna valor
  if (tomarTransporte) {
    console.log("Transporte llegó.");
    
  } else {
  console.log ("Esperando transporte...");
  }
}

export async function viajar(): Promise<void> { //otra función asincrónica que coordina cons la ejecución de la función esperarTransporte
  try{ //probar
  console.log("Iniciando viaje...");
  await esperarTransporte();
  console.log("Viaje completado.");
  } catch (noLlegoTransporte){ //Captura error del bloque try
    console.error("LLegarás tarde, no llego transporte ");
  }
}

viajar();

import { viajar } from './promesa';
esperarTransporte();
viajar();



****** Ejemplo 2: Escuchar Música Mientras Conduces

async function escucharMusica(): Promise<void> {
  console.log("Reproduciendo música...");
  await new Promise(resolve => setTimeout(resolve, 15000)); // Simula el tiempo de reproducción
  console.log("Música detenida.");
}

async function conducirConMusica(): Promise<void> {
  console.log("Comenzando el viaje...");
  await Promise.all([conducirAlTrabajo(), escucharMusica()]);
  console.log("Viaje y música completados.");
}

conducirConMusica();


****** Ejemplo 3: Conducir al Trabajo 

async function conducirAlTrabajo(): Promise<void> {
  console.log("Iniciando el viaje...");
  await new Promise(resolve => setTimeout(resolve, 15000)); // Simula el tiempo de conducción
  console.log("Llegaste al trabajo.");
}

async function rutinaMatutina(): Promise<void> {
  console.log("Comenzando la rutina...");
  await conducirAlTrabajo();
  console.log("Rutina matutina completada.");
}

rutinaMatutina();


